---
- name: create site contents dir
  ansible.builtin.file:
    path: /srv/www/{{ domain_name }}
    state: directory
    mode: 0755
    owner: nginx
    group: nginx
  become: yes

- name: find cert status
  ansible.builtin.shell: "ls /etc/letsencrypt/live/{{ domain_name }}/fullchain.pem"
  register: cert_status
  ignore_errors: true
  become: yes

- name: tls is enabled
  set_fact:
    tls: true
  when: "cert_status.rc|int == 0"

- name: tls is not enabled
  set_fact:
    tls: false
  when: "cert_status.rc|int != 0"

- name: copy site config file
  ansible.builtin.template:
    src: domain.tld.conf.j2
    dest: /etc/nginx/conf.d/{{ domain_name }}.conf
    owner: root
    group: wheel
    mode: "u=rw,g=r,o=r"
    backup: yes
  register: site_config_copied
  become: yes

- name: reload nginx config
  ansible.builtin.shell: nginx -s reload
  when: site_config_copied.changed
  become: yes

- name: install lets encrypt dual-domain certificate
  ansible.builtin.command: certbot certonly -n --agree-tos -m {{ admin_email }} --webroot -w {{ os_family_nginx_path_prefix[ansible_os_family] }}/{{ domain_name }} -d {{ domain_name }} -d www.{{ domain_name }}
  register: certbot_install
  changed_when: "'no action taken' not in certbot_install.stdout or 'Congratulations' in certbot_install.stdout"
  notify:
     - restart nginx
  when: site_has_www_domain == true
  become: yes

- name: install lets encrypt single-domain certificate
  ansible.builtin.command: certbot certonly -n --agree-tos -m {{ admin_email }} --webroot -w {{ os_family_nginx_path_prefix[ansible_os_family] }}/{{ domain_name }} -d {{ domain_name }}
  register: certbot_install
  changed_when: "'no action taken' not in certbot_install.stdout or 'Congratulations' in certbot_install.stdout"
  notify:
     - restart nginx
  when: site_has_www_domain == false
  become: yes

- name: tls is enabled
  set_fact:
    tls: true
  when: certbot_install.changed

- name: copy site config file
  ansible.builtin.template:
    src: domain.tld.conf.j2
    dest: /etc/nginx/conf.d/{{ domain_name }}.conf
    owner: root
    group: wheel
    mode: "u=rw,g=r,o=r"
    backup: yes
  when: certbot_install.changed
  register: site_config_copied_2
  become: yes

- name: reload nginx config
  ansible.builtin.shell: nginx -s reload
  when: site_config_copied_2.changed
  become: yes
