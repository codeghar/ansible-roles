server {
    listen {{ ansible_all_ipv4_addresses|sort()|last() }}:80;
    listen [{{ ansible_all_ipv6_addresses|sort()|first() }}]:80;

{% if tls %}
    listen {{ ansible_all_ipv4_addresses|sort()|last() }}:443 ssl http2;
    listen [{{ ansible_all_ipv6_addresses|sort()|first() }}]:443 ssl http2;
    # https://mozilla.github.io/server-side-tls/ssl-config-generator
    # https://ssl-config.mozilla.org/#server=nginx&server-version=1.16.1&config=intermediate&openssl-version=1.1.1a&hsts=false&ocsp=false
    # Run commands for version info:
    # nginx -v
    # openssl version
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_certificate {{ os_family_lets_encrypt_path_prefix[ansible_os_family] }}/live/{{ domain_name }}/fullchain.pem;
    ssl_certificate_key {{ os_family_lets_encrypt_path_prefix[ansible_os_family] }}/live/{{ domain_name }}/privkey.pem;
{% endif %}

    server_name {{ domain_name }} www.{{ domain_name }};

    root {{ os_family_nginx_path_prefix[ansible_os_family] }}/{{ domain_name }};
    index {{ index_pages }};
    charset utf-8;

    location /.well-known {
        allow all;
    }

    location / {
{% if redirect_domain %}
        # https://bjornjohansen.no/redirect-to-https-with-nginx
        return 307 https://{{ redirect_domain }}$request_uri;
{% else %}
        # First attempt to serve request as file, then
        # as directory, then fall back to displaying a 404.
        try_files $uri $uri/ =404;
        default_type {{ default_file_type }};
{% if autoindex %}
        autoindex on;
        autoindex_exact_size off;
        autoindex_localtime off;
{% else %}
        autoindex off;
{% endif %}
{% endif %}
    }
}
